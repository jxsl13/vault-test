- name: stage 04 - apply policies
  hosts: localhost
  gather_facts: false
  tasks:

  - name: get stage enabled
    set_fact:
      configureJWTEnabled: "{{ lookup('vars', 'configureJWT').enabled | default(True) }}"
      configureOIDCEnabled: "{{ lookup('vars', 'configureOIDC').enabled | default(True) }}"

  - name: get environment & variables
    set_fact:
      kubeconfig: "{{ lookup('vars', 'kubeconfig').replace('~', ansible_env.HOME) }}"
      vault: "{{ lookup('vars', 'vault') }}"
      policiesDir: "{{ lookup('vars', 'policiesDir').strip('/').replace('~', ansible_env.HOME) | default('policies') }}"

      remote_env:
        KUBECONFIG: "{{ lookup('vars', 'kubeconfig').replace('~', ansible_env.HOME) }}"
        VAULT_ADDR: "{{ lookup('vars', 'vault').address }}"
        VAULT_TOKEN: "{{ cluster_keys.root_token }}"
    when: configureOIDCEnabled or configureJWTEnabled

  - name: get policy files and names
    set_fact:
      policies:
        files: "{{ lookup('fileglob', policiesDir + '/*.hcl').split(',') }}"
        names: "{{ lookup('fileglob', policiesDir + '/*.hcl').split(',') | map('basename') | map('splitext') | map('first') | list }}"
    when: configureOIDCEnabled or configureJWTEnabled


  # apply all policies in the policies folder
  - name: "apply {{ item.0 }} policy"
    hashivault_policy:
      name: "{{ item.0 }}"
      rules_file: "{{ item.1 }}"
    environment: "{{ remote_env }}"
    with_together:
      - "{{ policies.names }}"
      - "{{ policies.files }}"
    when: configureOIDCEnabled or configureJWTEnabled