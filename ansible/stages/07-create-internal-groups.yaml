
# this stage is not possible to execute unless you put stages 5 through 7 in a single file.
# from my tetsing it seem sthat internal groups are not necessarily needed in order to enforce mapping of client id role
# to vault groups which have the corresponding acl policies attached to them.
- name: stage 07 - create internal groups
  hosts: localhost
  gather_facts: false
  tasks:

  - name: load keycloak credentials var from file
    include_vars:
      file: "{{ lookup('vars', 'keycloakCredentials') }}"
      name: keycloak
    when: configureJWTEnabled or configureOIDCEnabled

  - name: get environment & variables
    set_fact:
      kubeconfig: "{{ lookup('vars', 'kubeconfig').replace('~', ansible_env.HOME) }}"
      vault: "{{ lookup('vars', 'vault') }}"
      policiesDir: "{{ lookup('vars', 'policiesDir').strip('/').replace('~', ansible_env.HOME) | default('policies') }}"

      remote_env:
        KUBECONFIG: "{{ lookup('vars', 'kubeconfig').replace('~', ansible_env.HOME) }}"
        VAULT_ADDR: "{{ lookup('vars', 'vault').address | default('http://' + vault.name + '.' + vault.namespace + '.svc.cluster.local:8200') }}"
        VAULT_TOKEN: "{{ cluster_keys.root_token }}"
    when: configureJWTEnabled or configureOIDCEnabled

  - name: get policy files and names
    set_fact:
      policies:
        files: "{{ lookup('fileglob', policiesDir + '/*.hcl').split(',') }}"
        names: "{{ lookup('fileglob', policiesDir + '/*.hcl').split(',') | map('basename') | map('splitext') | map('first') | list }}"
    when: configureJWTEnabled or configureOIDCEnabled


  # at most one of there three tasks should run !!!!!!!!
  - name: create internal groups for JWT and OIDC
    hashivault_identity_group:
      name: "{{ item.0 }}"
      group_type: "internal"
      member_group_ids:
        - "{{ item.1.data.id }}"
        - "{{ item.2.data.id }}"
      policies:
        - "{{ item.0 }}"
      metadata:
        responsibility: "{{ item.0 }} of k/v secrets"
    environment: "{{ environment }}"
    with_together:
      - "{{ policies.names }}"
      - "{{ external_jwt_groups.results }}"
      - "{{ external_oidc_groups.results }}"
    register: internal_groups
    when: configureJWTEnabled and configureOIDCEnabled


  - name: create internal groups for JWT
    hashivault_identity_group:
      name: "{{ item.0 }}"
      group_type: "internal"
      member_group_ids:
        - "{{ item.1.data.id }}"
      policies:
        - "{{ item.0 }}"
      metadata:
        responsibility: "{{ item.0 }} of k/v secrets"
    environment: "{{ environment }}"
    with_together:
      - "{{ policies.names }}"
      - "{{ external_jwt_groups.results }}"
    register: internal_groups
    when: configureJWTEnabled and (not configureOIDCEnabled)


  - name: create internal groups for OIDC
    hashivault_identity_group:
      name: "{{ item.0 }}"
      group_type: "internal"
      member_group_ids:
        - "{{ item.1.data.id }}"
      policies:
        - "{{ item.0 }}"
      metadata:
        responsibility: "{{ item.0 }} of k/v secrets"
    environment: "{{ environment }}"
    with_together:
      - "{{ policies.names }}"
      - "{{ external_oidc_groups.results }}"
    register: internal_groups
    when: (not configureJWTEnabled) and configureOIDCEnabled