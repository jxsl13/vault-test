- name: stage 02 - init vault
  hosts: all
  gather_facts: true
  tasks:
  - name: is stage enabled
    set_fact:
      initVaultEnabled: "{{ (lookup('vars', 'initVault').enabled | default(False)) }}"

  - name: get environment & variables
    set_fact:
      kubeconfig: "{{ lookup('vars', 'kubeconfig').replace('~', ansible_env.HOME) }}"
      vault: "{{ lookup('vars', 'vault') }}"
      clusterKeysSaveDestination: "{{ lookup('vars', 'cluster_keys').replace('~', ansible_env.HOME) | default( '/'.join((playbook_dir, 'secrets/cluster_keys.json')) ) }}"
    when: initVaultEnabled

  - name: get vault status
    hashivault_status:
    register: vault_status
    environment:
      VAULT_ADDR: "{{ vault.address | default('http://' + vault.name + '.' + vault.namespace + '.svc.cluster.local:8200') }}"
    when: initVaultEnabled

  - name: set cluster status variable
    set_fact:
      cluster: "{{ vault_status.status }}"
    when: initVaultEnabled

  - name: init vault
    kubernetes.core.k8s_exec:
      kubeconfig: "{{ kubeconfig }}"
      namespace: "{{ vault.namespace }}"
      pod: "{{ vault.name }}-0"
      command: "vault operator init -key-shares={{ vault.keyShares }} -key-threshold={{ vault.threshold }} -format=json"
    register: cluster_keys_result
    when: initVaultEnabled and (not cluster.initialized)

  # create variable from stdout JSON structure
  - name: set cluster keys
    set_fact:
      cluster_keys_fact: "{{ cluster_keys_result.stdout | from_json }}"
    when: initVaultEnabled and (not cluster.initialized)

  # save as JSON at specified detsination
  - name: save cluster_keys.json
    copy:
      content: "{{ cluster_keys_fact | to_nice_json }}"
      dest: "{{ clusterKeysSaveDestination }}"
    when: initVaultEnabled and (not cluster.initialized)
